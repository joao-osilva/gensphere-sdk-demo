nodes:
  A:
    executor: pandas_executor
    executor_args:
      args: []
      kwargs:
        method: ".apply(lambda x: x * 2)"
        input_path: "input_dataframe.csv"
        output_path: "modified_dataframe.csv"
    dependencies: []

  B:
    executor: sql_executor
    executor_args:
      args: []
      kwargs:
        table_path: "{{ A }}"
        query: "SELECT * FROM data_table WHERE value > 40"
        output_path: "filtered_output.csv"
    dependencies: [A]

  C:
    executor: openai
    executor_args:
      args: []
      kwargs:
        model: "gpt-3.5-turbo"
        messages:
          - role: "user"
            content: "Analyze the data: {{ B }}"
        structured_output: false
    dependencies: [B]

  D:
    executor: openai
    executor_args:
      args: []
      kwargs:
        model: "gpt-3.5-turbo"
        messages:
          - role: "user"
            content: "Summarize the structured data: {{ C }}"
        structured_output: true
        schema:
          type: object
          properties:
            summary:
              type: string
    dependencies: [C]

  E:
    executor: openai
    executor_args:
      args: []
      kwargs:
        model: "gpt-3.5-turbo"
        messages:
          - role: "user"
            content: "Perform calculations with a tool call: {{ D }}"
        structured_output: true
        schema:
          type: object
          properties:
            calculation:
              type: number
        tool_name: "calculate_tool"
    dependencies: [D]


  #H:
  #  executor: "https://local.api/execute"
  #  dependencies: [B]
  #  executor_args:
  #    args: []
  #    kwargs:
  #      input: "test"  # Static argument
  #I:
  #  executor: "my_api_task"
  #  dependencies: [C]
  #  executor_args:
  #    args: []
  #    kwargs:
  #      input: "{{ C }}"  # Use output of node C
